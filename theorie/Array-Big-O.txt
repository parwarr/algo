An array is an ordered collection of values.

example: const odd = [1, 3, 5, 7, 9];

If you insert or remove at the end the Time Complexity is O(1) because you are just adding or removing the last element.

If you insert or remove at the beginning the Time Complexity is O(n) because you have to shift all the elements.

If you access an element by index the Time Complexity is O(1) because you can access it directly.

If you search for an element the Time Complexity is O(n) because you have to iterate through all the elements.

Methods:

Push and Pop: O(1)

Shift, Unshift, Concat, Slice, Splice: O(n)

forEach, Map, Filter, Reduce: O(n)